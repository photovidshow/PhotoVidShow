float4 params0: register(C0);
float4 params1: register(C1);


// params0[0] = xfrequency
// params0[1] = xamp
// params0[2] = yfrequency
// params0[3] = yamp 

// params1[0] = delta


struct PS_INPUT
{
    float4 Position   : POSITION;
    float2 Texture0   : TEXCOORD0;
    float2 Texture1   : TEXCOORD1;
};

struct PS_OUTPUT
{
    float4 Color   : COLOR0;
};


sampler2D Texture1Sampler : register(S0);

PS_OUTPUT ps_main( in PS_INPUT In )
{
    PS_OUTPUT pixelColor;
   
    In.Texture0.y = In.Texture0.y + (sin((In.Texture0.x )*(params0[2]))*(params0[3]*params1[0]));   
    In.Texture0.x = In.Texture0.x + (cos((In.Texture0.y )*(params0[0]))*(params0[1]*params1[0])); 

    pixelColor.Color = tex2D(Texture1Sampler, In.Texture0);
    return pixelColor;
}
